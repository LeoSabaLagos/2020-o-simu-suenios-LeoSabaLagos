import persona.*
import suenio.*
import lugarViaje.*
import carrera.*


describe "Punto 1"{
	
	var leo = new Persona(edad = 22, sueldo = 200 , cantidadHijos = 0, carrerasAEstudiar = [ingeniero], personalidad = realista)
	var ale = new Persona(edad = 22, sueldo = 200 , cantidadHijos = 0, carrerasAEstudiar = [futbolista],personalidad = alocada)
	var serIngeniero = new RecibirseDe(carrera = ingeniero, felicidoniosPorCumplirlo = 100)
	
	test "no se puede cumplir suenio de recibirse de una carrera" {

		assert.throwsExceptionWithMessage("No se puede cumplir el suenio", {ale.intentaCumplir(serIngeniero)})
	}
	
	test "se puede cumplir suenio de recibirse de una carrera"{
		leo.intentaCumplir(serIngeniero)
		
		assert.equals(leo.nivelFelicidad(),100)
		
		assert.equals(leo.sueniosCumplidos(),[serIngeniero])
		assert.equals(leo.carrerasRecibidas(),[ingeniero])
	}
	

}

describe "Punto 2"{
	
	var leo = new Persona(edad = 22, sueldo = 0 , cantidadHijos = 0, carrerasAEstudiar = [ingeniero],personalidad = realista)
	var ale = new Persona(edad = 22, sueldo = 1000 , cantidadHijos = 1, carrerasAEstudiar = [futbolista],personalidad = alocada)
	var multiple = new SuenioMultiple(felicidoniosPorCumplirlo = 0)
	
	test "no se puede cumplir suenio multiple" {

		assert.throwsExceptionWithMessage("No se puede cumplir el suenio", {ale.intentaCumplir(multiple)})
	}
	
	test "se puede cumplir suenio multiple"{
		leo.intentaCumplir(multiple)
		
		assert.equals(leo.nivelFelicidad(),500)
		
		assert.equals(leo.sueniosCumplidos(),[multiple])
		assert.equals(leo.carrerasRecibidas(),[])
	}
	
}

	/* 
	test "testX" {

		assert.that(true)

	}
	
		test "testX" {

		assert.that(true)

	}
	
		test "testX" {

		assert.that(true)

	}	*/

/*describe "Punto 1"{
	
	test "testX" {

		assert.that(true)

	}
	
		test "testX" {

		assert.that(true)

	}
	
		test "testX" {

		assert.that(true)

	}
	
		test "testX" {

		assert.that(true)

	}	
}
 */


